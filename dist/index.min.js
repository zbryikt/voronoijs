(function(){function t(t,e){var n={}.hasOwnProperty;for(var r in e)n.call(e,r)&&(t[r]=e[r]);return t}function e(t,e){for(var n=-1,r=e.length>>>0;++n<r;)if(t===e[n])return!0;return!1}var n,r,i;(n={}).Treemap=function(t,e,r,o,s){var h,u,a,c,l,p;for(null==s&&(s=0),this.root=t,this.omega=e,this.width=r,this.height=o,this.lv=s,h=[],u=0,c=(a=t.children).length;u<c;++u)l=a[u],h.push((l.x=Math.random()*r,l.y=Math.random()*o,l.lv=s,l));for(this.sites=h,0===s&&this.normalizeValue(t,i.area(e),this.correctValue(t)),this.boundmap=new n.Boundmap(this.sites,e,r,o,!0),this.boundmap.compute(),this.treemap=[],u=0,c=(a=t.children).length;u<c;++u)p=u,(l=a[u]).children&&this.treemap.push(new n.Treemap(l,this.boundmap.polygons[p],r,o,s+1));return this},n.Treemap.prototype={updateValue:function(){var t,e,r;for(this.normalizeValue(this.root,i.area(this.omega),this.correctValue(this.root)),this.boundmap=new n.Boundmap(this.sites,this.omega,this.width,this.height,!0),t=0,r=(e=this.treemap).length;t<r;++t)e[t].updateValue();return this.compute()},correctValue:function(t){var e,n,r,i;for(null==t&&(t=this.sites),e=0,r=(n=t.children||[]).length;e<r;++e)i=n[e];return t.value=function(){var e,n,r,o=[];for(e=0,r=(n=t.children||[]).length;e<r;++e)i=n[e],o.push(this.correctValue(i||null));return o}.call(this).reduce(function(t,e){return t+e},0)||t.value||0},normalizeValue:function(t,e,n){var r,i,o,s,h=[];for(t.value=.05*t.value*e/n,r=0,o=(i=t.children||[]).length;r<o;++r)s=i[r],h.push(this.normalizeValue(s,e,n));return h},compute:function(){var t=this;return this.boundmap.compute(),this.treemap.forEach(function(e,n){return e.setOmega(t.boundmap.polygons[n]),e.compute()})},getSites:function(){var t;return[this.boundmap.sites].concat([function(){var e,n=[];for(e=0;e<4;++e)t=e,n.push({boundary:!0});return n}()],this.treemap.map(function(t){return t.getSites()})).reduce(function(t,e){return t.concat(e)},[])},getPolygons:function(){return[this.boundmap.polygons].concat(this.treemap.map(function(t){return t.getPolygons()})).reduce(function(t,e){return t.concat(e)},[])},setOmega:function(t){return this.omega=t,this.boundmap=new n.Boundmap(this.sites,t,this.width,this.height)}},n.Boundmap=function(t,e,r,o,s){var h,u;return this.sites=t,this.omega=e,this.width=r,this.height=o,null==s?(h=t.reduce(function(t,e){return t+e.value},0),u=i.area(e),t.forEach(function(t){return t.nvalue=.1*t.value*u/h})):t.forEach(function(t){return t.nvalue=t.value}),t.forEach(function(t){return t.nvalue=t.value}),this.powerbox=new n.PowerDiagram(t,r,o),this.powerbox.compute(),this.clip(),this},n.randomSite=function(t,e,n,r){var i;return function(){var o,s,h=[];for(o=0,s=t;o<s;++o)i=o,h.push({x:e*Math.random(),y:n*Math.random(),value:1+Math.random()*r});return h}().map(function(t){return t.weight=t.value,t})},n.Boundmap.prototype={clip:function(){var t=this;return this.polygons=this.powerbox.convex.polygons.map(function(e){return e?n.Polygon.intersect(t.omega,e):[]}),this.centroids=this.polygons.map(function(t){return t?n.Polygon.centroid(t):{x:null,y:null}})},adoptPos:function(){var t,e,n,r,i,o,s,h,u,a,c,l,p,f,y,d=[];for(e=(t={sites:this.sites,centroids:this.centroids,polygons:this.polygons}).sites,n=t.centroids,r=t.polygons,i=0,o=n.length-4;i<o;++i)e[s=i]&&r[s]&&!e[s].boundary&&(r[s].length?(t=[n[s].x,n[s].y],e[s].x=t[0],e[s].y=t[1]):(t=[this.width*Math.random(),this.height*Math.random()],e[s].x=t[0],e[s].y=t[1]));for(i=0,o=n.length-4;i<o;++i)if(s=i,e[s]&&r[s].length&&!e[s].boundary){for(h=(t=[Math.sqrt(e[s].weight),-1])[0],u=t[1],a=0,c=r[s].length;a<c;++a)l=a,p=(t=[r[s][l],r[s][(l+1)%r[s].length]])[0],f=t[1],y=10*Math.abs(((f.y-p.y)*e[s].x-(f.x-p.x)*e[s].y+f.x*p.y-f.y*p.x)/Math.sqrt(Math.pow(f.y-p.y,2)+Math.pow(f.x-p.x,2))),(-1===u||u>y)&&(u=y);h=Math.pow(Math.min(h,u),2),d.push(e[s].weight=h)}return d},resetWeight:function(){return this.sites.forEach(function(t,e){return t.weight=t.pvalue=t.nvalue})},adoptWeight:function(){var t,e,r,o,s,h,u,a,c,l,p,f,y,d,g,x,m,v=[];for(r=(t={sites:this.sites,centroids:this.centroids,polygons:this.polygons}).centroids,o=t.polygons,s=0,(e=t.sites).forEach(function(t){return s+=t.nvalue,t.pvalue!==t.nvalue&&(t.weight=t.nvalue),t.pvalue=t.nvalue}),h=n.Polygon.area(this.omega),u=0,a=r.length-4;u<a;++u)if(c=u,e[c]&&o[c].length&&!e[c].boundary){for(l=h*e[c].nvalue/s,p=i.area(o[c]),f=Math.sqrt(e[c].weight),f=.5*(Math.sqrt(e[c].weight)*l/p-f)+f,y=-1,d=0,g=r.length-4;d<g;++d)c!==(x=d)&&this.polygons[x]&&(m=Math.sqrt(Math.pow(r[x].x-e[c].x,2)+Math.pow(r[x].y-e[c].y,2)),isNaN(m)||(-1===y||y>m)&&(y=m));(f=Math.pow(Math.min(f,y),2))<this.powerbox.epsilon&&(f=this.powerbox.epsilon),v.push(e[c].weight=f)}return v},compute:function(){return this.adoptPos(),this.powerbox=new n.PowerDiagram(this.sites,this.width,this.height),this.powerbox.compute(),this.clip(),this.adoptWeight(),this.powerbox=new n.PowerDiagram(this.sites,this.width,this.height),this.powerbox.compute(),this.clip()}},n.PowerDiagram=function(t,e,r){var i=this;return this.sites=t,this.width=e,this.height=r,this.boundary=[{x:-e,y:-r,boundary:!0},{x:-e,y:2*r,boundary:!0},{x:2*e,y:-r,boundary:!0},{x:2*e,y:2*r,boundary:!0}].map(function(t){return t.boundary=!0,t.weight=i.epsilon,t.value=i.epsilon,t}),this.convex=new n.Convex(JSON.parse(JSON.stringify(t.concat(this.boundary)))),this},n.PowerDiagram.prototype={epsilon:1e-10,compute:function(){return this.convex.calculate()}},r={inner:function(t,e){return t.x*e.x+t.y*e.y+t.z*e.z},sub:function(t,e){return{x:t.x-e.x,y:t.y-e.y,z:t.z-e.z}},cross:function(t,e){return{x:t.y*e.z-t.z*e.y,y:t.z*e.x-t.x*e.z,z:t.x*e.y-t.y*e.x}}},n.Convex=function(t){var e,i,o,s,h,u,a,c=this;if(this.pts=t,this.polygons=[],this.edges={},this.pts.forEach(function(t){return t.z=Math.pow(t.x,2)+Math.pow(t.y,2)-t.weight}),this.pair={f2p:{},p2f:{}},this.faces.list=[],!(this.pts.length<4)){for(i=(e=[[0,1,2,3],3])[0],this.idx=e[1];this.idx<this.pts.length;){for(this.idx++,this.center={},["x","y","z"].map(function(t){return c.center[t]=[0,1,2,3].reduce(function(e,n){return e+c.pts[i[n]][t]},0)/4}),s=[],h=0,u=(e=[[0,1,2],[0,1,3],[0,2,3],[1,2,3]].map(function(t){return t.map(function(t){return i[t]})})).length;h<u;++h)a=e[h],s.push(new n.face(this,a));if(!(o=s).filter(function(t){return t.trivial}).length)break;a=i.map(function(t,e){var n;return n=r.sub(c.center,c.pts[t]),["x","y","z"].reduce(function(t,e){return t+Math.pow(n[e],2)},0),[n,e]}).sort(function(t,e){return t[0]-e[0]})[0][1],i.splice(i.indexOf(a),1),i.push(this.idx)}return this.faces.add(o),o.forEach(function(t,e){return c.pts.forEach(function(n,r){if(t.front(n))return c.setPair(e,r,t,n)})}),this}},t(n.Convex.prototype,{getPairByPtr:function(t){return this.pair.p2f[t]||[]},getPairByFace:function(t){return this.pair.f2p[t]||[]},setPair:function(t,e,n,r){var i,o;return((i=(o=this.pair).f2p||(o.f2p={}))[t]||(i[t]=[])).push(r),((i=(o=this.pair).p2f||(o.p2f={}))[e]||(i[e]=[])).push(n)},faces:{contain:function(t){return e(t,this.list)},add:function(t){return Array.isArray(t)?this.list=this.list.concat(t):this.list.push(t)},remove:function(t){var e=this;return Array.isArray(t)||(t=[t]),t.forEach(function(t){var n;if((n=e.list.indexOf(t))>=0)return e.list.splice(n,1)})}},polygonReorder:function(t){var e,n,r,i;return e=t.reduce(function(t,e){return t+e.x},0)/t.length,n=t.reduce(function(t,e){return t+e.y},0)/t.length,r=Math.pow(e,2)+Math.pow(n,2),i=function(t){var i,o;return i=Math.sqrt(r*(Math.pow(t.x-e,2)+Math.pow(t.y-n,2))),o=Math.acos((-e*(t.x-e)-n*(t.y-n))/i),Math.acos((n*(t.x-e)-e*(t.y-n))/i)>Math.PI/2&&(o=6.28-o),o},t.sort(function(t,e){return i(t)-i(e)})},grid:function(){var t,n,r,i,o,s,h,u,a,c,l,p,f,y,d,g,x=[];for(this.faces.list.forEach(function(t){return t.center=t.getCenter(),t}),this.faces.list=this.faces.list.filter(function(t){return!t.removed&&t.front(t.center)}),t=[],n=0,r=this.pts.length;n<r;++n)n,t.push([]);for(this.polygons=t,n=0,o=(i=this.pts).length;n<o;++n)(s=i[n]).visited=!1;for(h=[],n=0,o=(i=this.faces.list).length;n<o;++n){for(u=[],a=0,l=(c=i[n].idx).length;a<l;++a)if(s=c[a],!e(s,h)){for(h.push(s),(p=[]).idx=s,f=0,d=(y=this.faces.list).length;f<d;++f)f,e(s,(g=y[f]).idx)&&p.push(g.dual());this.polygonReorder(p),p.cx=p.reduce(function(t,e){return t+e.x},0)/p.length,p.cy=p.reduce(function(t,e){return t+e.y},0)/p.length,this.pts[s].boundary&&(p.boundary=!0),u.push(this.polygons[s]=p)}x.push(u)}return x},calculate:function(){for(;this.idx<this.pts.length;)this.iterate();return this.grid()},iterate:function(){var t,e,r,i,o,s,h,u,a,c,l,p,f,y,d,g,x,m,v,w,z,M;if(t=(new Date).getTime(),!(this.idx>=this.pts.length)){for(r=[],i=0,o=(e=this.getPairByPtr(this.idx)).length;i<o;++i)if(!(s=e[i]).removed)for(h=0,a=(u=s.edges).length;h<a;++h)(c=u[h]).ref?c.dup=!0:r.push(c),c.ref++;return l=r.filter(function(t){return t.ref<2}),e.map(function(t){return t.removed=!0}),p=(new Date).getTime(),this.faces.add(f=function(){var t,e,r,i=[];for(t=0,r=(e=l).length;t<r;++t)c=e[t],i.push(new n.face(this,c.concat([this.idx]),!0));return i}.call(this)),u=[this.pts,this.pair,this.idx,this.faces.list.length,this.pts.length,f.length],y=u[0],d=u[1],g=u[2],x=u[3],m=u[4],v=u[5],w=(new Date).getTime(),f.forEach(function(t,e){var n,r,i,o,s,h,u,a=[];for(e+=x-v,r=(n=[t.norm,t.precal])[0],i=n[1],o=g+1,s=m;o<s;++o)u=y[h=o],r.x*u.x+r.y*u.y+r.z*u.z-i>0&&(((n=d.f2p)[e]||(n[e]=[])).push(u),a.push(((n=d.p2f)[h]||(n[h]=[])).push(t)));return a}),this.idx++,z=(new Date).getTime(),this.e1=(null!=(M=this.e1)?M:0)+(p-t),this.e2=(null!=(M=this.e2)?M:0)+(w-p),this.e3=(null!=(M=this.e3)?M:0)+(z-w)}}}),n.face=function(t,e,n){var r,i,o,s,h,u,a,c,l,p,f,y,d,g,x,m,v,w,z,M,b,P;for(null==n&&(n=!1),this.convex=t,this.idx=e,this.active=n,this.removed=!1,this.pts=(r=[t.pts[e[0]],t.pts[e[1]],t.pts[e[2]]],i=r[0],o=r[1],s=r[2],r),h=t.center,u=(r=[s.x-i.x,s.y-i.y,s.z-i.z])[0],a=r[1],c=r[2],l=(r=[o.x-i.x,o.y-i.y,o.z-i.z])[0],p=r[1],f=r[2],this.norm=y={x:a*f-c*p,y:c*l-u*f,z:u*p-a*l},d=Math.pow(y.x,2)+Math.pow(y.y,2)+Math.pow(y.z,2),this.norm=y={x:y.x/d,y:y.y/d,z:y.z/d},(g=y.x*(h.x-i.x)+y.y*(h.y-i.y)+y.z*(h.z-i.z))>0?(r=[-y.x,-y.y,-y.z],y.x=r[0],y.y=r[1],y.z=r[2],this.pts.reverse(),e.reverse()):0===g&&(this.trivial=!0),x=[],m=0;m<3;++m)w=((v=m)+1)%3,z=(r=e[v]>e[w]?[e[w],e[v]]:[e[v],e[w]])[0],M=r[1],x.push((r=(b=((P=t.edges)[z]||(P[z]={}))[M])?b:((P=t.edges)[z]||(P[z]={}))[M]=[z,M],r.ref=0,r));return this.edges=x,this.precal=y.x*i.x+y.y*i.y+y.z*i.z,this},t(n.face.prototype,{front:function(t){var e;return(e=this.norm).x*t.x+e.y*t.y+e.z*t.z-this.precal>0},getCenter:function(){var t,e,n;return t=[{x:0,y:0},this.pts.length],e=t[0],n=t[1],this.pts.forEach(function(t){var n;return n=[e.x+t.x,e.y+t.y],e.x=n[0],e.y=n[1],n}),e.x=e.x/n,e.y=e.y/n,e.z=-100,e},dual:function(){var t,e,n,r,i,o,s,h,u,a,c,l,p,f,y,d,g;return this.dual.value&&this.dual.value,t=this.pts[0],e=t.x,n=t.y,r=t.z,t=this.pts[1],i=t.x,o=t.y,s=t.z,t=this.pts[2],h=t.x,u=t.y,a=t.z,c=n*(s-a)+o*(a-r)+u*(r-s),l=r*(i-h)+s*(h-e)+a*(e-i),p=e*(o-u)+i*(u-n)+h*(n-o),f=e*(o*a-u*s)+i*(u*r-n*a)+h*(n*s-o*r),y=.5*-c/p,d=.5*-l/p,g=-f/p,this.dual.value={x:y,y:d,z:g},this.dual.value}}),n.Polygon=i={},i.centroid=function(t){var e,n,r,i,o,s,h,u,a;if(!t||!t.length)return{x:NaN,y:NaN};for(e=t.length,r=(n=[0,0,0])[0],i=n[1],o=n[2],s=0;s<e;++s)u=(n=[t[h=s],t[(h+1)%e]])[0],a=n[1],r+=(u.x+a.x)*(u.x*a.y-a.x*u.y),i+=(u.y+a.y)*(u.x*a.y-a.x*u.y),o+=3*(u.x*a.y-a.x*u.y);return{x:r/o,y:i/o}},i.area=function(t){var e,n,r,i;return function(){var o,s,h,u=[];for(o=0,s=t.length;o<s;++o)n=((e=o)+1)%t.length,h=[t[e],t[n]],r=h[0],i=h[1],u.push(r.x*i.y-r.y*i.x);return u}().reduce(function(t,e){return t+e/2},0)},i.intersect=function(t,e){var n,r,i,o,s,h,u,a,c,l,p,f,y,d,g,x,m,v,w,z,M,b,P,E,V,D,B,N,O,T;if(!t||!t.length)return[];for(n=t.reduce(function(t,e){return t+e.x},0)/t.length,r=t.reduce(function(t,e){return t+e.y},0)/t.length,i=0,o=t.length;i<o;++i){for(u=(h=[t[s=i],t[(s+1)%t.length]])[0],c=(h=[(a=h[1]).x-u.x,a.y-u.y])[0],l=h[1],p=e.reduce(function(t,e){return t+e.x},0)/e.length,f=e.reduce(function(t,e){return t+e.y},0)/e.length,y=u.x*l-u.y*c,g=[],x=0,m=e.length;x<m;++x)w=(h=[e[v=x],e[(v+1)%e.length]])[0],M=(h=[(z=h[1]).x-w.x,z.y-w.y])[0],(b=h[1])*c-M*l!=0&&((P=(w.x*l-w.y*c-y)/(b*c-M*l))<0||P>1||(D=(-c*b+l*M)*(-(h=[p-(E=(h=[w.x+M*P,w.y+b*P])[0]),f-(V=h[1])])[0]*b+h[1]*M)>0,g.push([P,v,E,V,D])));if((d=g).length<2){if((-(n-u.x)*l+(r-u.y)*c)*(-(p-u.x)*l+(f-u.y)*c)<0)return[]}else{B=(h=d[0][4]?[d[0],d[1]]:[d[1],d[0]])[0],N=h[1],O=[{x:B[2],y:B[3]},{x:N[2],y:N[3]}],T=N[1];do{T=(T+1)%e.length,O.push(e[T])}while(T!==B[1]);e=O}}return e},i.create=function(t,e,n){var r,i,o=[];for(n<3&&(n=3),r=0;r<n;++r)i=r,o.push({x:1*(t/2+t/2*Math.cos(2*Math.PI*i/n)),y:1*(e/2+e/2*Math.sin(2*Math.PI*i/n))});return o},"undefined"!=typeof module&&null!==module?module.exports=n:"undefined"!=typeof window&&null!==window&&(window.voronoi=n)}).call(this);
